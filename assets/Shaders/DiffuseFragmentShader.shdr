#version 330 core
out vec4 color;
  
uniform vec3 objectColor;
uniform vec3 lightColor;
uniform vec3 lightPosition;

in vec3 normal_o;
in vec3 fragPosition_o; 
void main()
{
	vec3 norm = normalize(normal_o);
	vec3 lightDir = normalize(lightPosition - fragPosition_o);  

	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;

    float ambientStrength = 0.1f;
    vec3 ambient = ambientStrength * lightColor;

    vec3 result = (ambient + diffuse) * objectColor;
	color = vec4(result, 1.0f);

}